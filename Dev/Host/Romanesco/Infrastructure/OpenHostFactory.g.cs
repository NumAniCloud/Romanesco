// <autogenerated />
#nullable enable
using System;
using System.Collections.Generic;
using Romanesco.Common.Model.Reflections;
using Romanesco.Model.Infrastructure;
using Romanesco.Common.Model.Basics;

namespace Romanesco.Infrastructure
{
	public partial class OpenHostFactory : IOpenHostFactory
		, IDisposable
	{
		private DataAssemblyRepository? _ResolveDataAssemblyRepositoryCache;
		private CommandHistory? _ResolveCommandHistoryCache;
		private ValueClipBoard? _ResolveValueClipBoardCache;

		public OpenHostFactory()
		{
		}

		public IDataAssemblyRepository ResolveDataAssemblyRepository()
		{
			return _ResolveDataAssemblyRepositoryCache ??= new DataAssemblyRepository();
		}

		public CommandHistory ResolveCommandHistory()
		{
			return _ResolveCommandHistoryCache ??= new CommandHistory();
		}

		public ValueClipBoard ResolveValueClipBoard()
		{
			return _ResolveValueClipBoardCache ??= new ValueClipBoard();
		}

		public void Dispose()
		{
		}
	}
}